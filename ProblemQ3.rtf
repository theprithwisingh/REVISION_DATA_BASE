CREATE DATABASE students_db;
USE students_db;

CREATE TABLE student(
id INT PRIMARY KEY,
name VARCHAR(50)
);

CREATE TABLE course(
student_id INT,
course VARCHAR(50)
);

INSERT INTO student 
(id, name)
VALUES
(101,"adam"),
(102,"bob"),
(103,"casey");

INSERT INTO course
(student_id, course)
VALUES
(102,"english"),
(105,"math"),
(103,"sciene"),
(107,"computer science");

select * from student;
select * from course;


select *
from student
inner join course
on student.id  =  course.student_id;



SELECT *
FROM student
LEFT JOIN course
ON student.id = course.student_id;

SELECT student.id, student.name, course.course
FROM student
LEFT JOIN course
ON student.id = course.student_id;

SELECT student.id, student.name, course.course
FROM student
RIGHT JOIN course
ON student.id = course.student_id;


-- UNION

SELECT *
FROM student
LEFT JOIN course
ON student.id = course.student_id
UNION
SELECT *
FROM student
RIGHT JOIN course
ON student.id = course.student_id;

-- Qs: Write SQL commands to display the right exclusive join :
SELECT *
FROM student
LEFT JOIN course
ON student.id = course.student_id
WHERE course.student_id IS NULL;

SELECT *
FROM student
RIGHT JOIN course
ON student.id = course.student_id
WHERE student.id IS NULL;


-- SELF JOIN
-- It is a regular join but the table is joined with itself.
CREATE DATABASE employee;
USE employee;

CREATE TABLE employee(
id INT PRIMARY KEY,
name VARCHAR(50),
manager_id INT
);

INSERT INTO employee
(id,name,manager_id)
VALUES
(101,"adam",103),
(102,"bob",104),
(103,"casey",NULL),
(104,"donald",103);


SELECT a.name as manager_name, b.name
FROM employee as a
JOIN employee AS b
ON a.id = b.manager_id;
